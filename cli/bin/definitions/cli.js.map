{"version":3,"sources":["definitions/cli.ts"],"names":["CommandType"],"mappings":"AAGA,WAAY,WAAW;IACnBA,6DAAYA,CAAAA;IACZA,iEAAcA,CAAAA;IACdA,+DAAaA,CAAAA;IACbA,mEAAeA,CAAAA;IACfA,iDAAMA,CAAAA;IACNA,mDAAOA,CAAAA;IACPA,uDAASA,CAAAA;IACTA,uDAASA,CAAAA;IACTA,2DAAWA,CAAAA;IACXA,mEAAeA,CAAAA;IACfA,sEAAgBA,CAAAA;IAChBA,0EAAkBA,CAAAA;IAClBA,gDAAKA,CAAAA;IACLA,gEAAaA,CAAAA;IACbA,wEAAiBA,CAAAA;IACjBA,kFAAsBA,CAAAA;IACtBA,kEAAcA,CAAAA;IACdA,wEAAiBA,CAAAA;IACjBA,sEAAgBA,CAAAA;IAChBA,sEAAgBA,CAAAA;IAChBA,8CAAIA,CAAAA;IACJA,gDAAKA,CAAAA;IACLA,kDAAMA,CAAAA;IACNA,gDAAKA,CAAAA;IACLA,oDAAOA,CAAAA;IACPA,sDAAQA,CAAAA;IACRA,oDAAOA,CAAAA;IACPA,kEAAcA,CAAAA;IACdA,8DAAYA,CAAAA;IACZA,sDAAQA,CAAAA;IACRA,4DAAWA,CAAAA;IACXA,gEAAaA,CAAAA;IACbA,kDAAMA,CAAAA;AACVA,CAACA,EAlCW,mBAAW,KAAX,mBAAW,QAkCtB;AAlCD,IAAY,WAAW,GAAX,mBAkCX,CAAA;AAkMA","file":"cli.js","sourcesContent":["/// <reference path=\"../../definitions/generated/code-push.d.ts\" />\nimport AccountManager = require(\"code-push\");\n\nexport enum CommandType {\n    accessKeyAdd,\n    accessKeyPatch,\n    accessKeyList,\n    accessKeyRemove,\n    appAdd,\n    appList,\n    appRemove,\n    appRename,\n    appTransfer,\n    collaboratorAdd,\n    collaboratorList,\n    collaboratorRemove,\n    debug,\n    deploymentAdd,\n    deploymentHistory,\n    deploymentHistoryClear,\n    deploymentList,\n    deploymentMetrics,\n    deploymentRemove,\n    deploymentRename,\n    link,\n    login,\n    logout,\n    patch,\n    promote,\n    register,\n    release,\n    releaseCordova,\n    releaseReact,\n    rollback,\n    sessionList,\n    sessionRemove,\n    whoami\n}\n\nexport interface ICommand {\n    type: CommandType;\n}\n\nexport interface IAccessKeyAddCommand extends ICommand {\n    name: string;\n    ttl?: number;\n}\n\nexport interface IAccessKeyPatchCommand extends ICommand {\n    newName?: string;\n    oldName: string;\n    ttl?: number;\n}\n\nexport interface IAccessKeyListCommand extends ICommand {\n    format: string;\n}\n\nexport interface IAccessKeyRemoveCommand extends ICommand {\n    accessKey: string;\n}\n\nexport interface IAppAddCommand extends ICommand {\n    appName: string;\n    os: string;\n    platform: string;\n}\n\nexport interface IAppListCommand extends ICommand {\n    format: string;\n}\n\nexport interface IAppRemoveCommand extends ICommand {\n    appName: string;\n}\n\nexport interface IAppRenameCommand extends ICommand {\n    currentAppName: string;\n    newAppName: string;\n}\n\nexport interface IAppTransferCommand extends ICommand {\n    appName: string;\n    email: string;\n}\n\nexport interface ICollaboratorAddCommand extends ICommand {\n    appName: string;\n    email: string;\n}\n\nexport interface ICollaboratorListCommand extends ICommand {\n    appName: string;\n    format: string;\n}\n\nexport interface ICollaboratorRemoveCommand extends ICommand {\n    appName: string;\n    email: string;\n}\n\n\nexport interface IDebugCommand extends ICommand {\n    platform: string;\n}\n\nexport interface IDeploymentAddCommand extends ICommand {\n    appName: string;\n    deploymentName: string;\n    default: boolean;\n}\n\nexport interface IDeploymentHistoryClearCommand extends ICommand {\n    appName: string;\n    deploymentName: string;\n}\n\nexport interface IDeploymentHistoryCommand extends ICommand {\n    appName: string;\n    deploymentName: string;\n    format: string;\n    displayAuthor: boolean;\n}\n\nexport interface IDeploymentListCommand extends ICommand {\n    appName: string;\n    format: string;\n    displayKeys: boolean;\n}\n\nexport interface IDeploymentRemoveCommand extends ICommand {\n    appName: string;\n    deploymentName: string;\n}\n\nexport interface IDeploymentRenameCommand extends ICommand {\n    appName: string;\n    currentDeploymentName: string;\n    newDeploymentName: string;\n}\n\nexport interface ILinkCommand extends ICommand {\n    serverUrl?: string;\n}\n\nexport interface ILoginCommand extends ICommand {\n    serverUrl?: string;\n    accessKey: string;\n    proxy?: string;\n    noProxy?: boolean;\n}\n\nexport interface IPackageInfo {\n    description?: string;\n    label?: string;\n    disabled?: boolean;\n    mandatory?: boolean;\n    rollout?: number;\n}\n\nexport interface IPatchCommand extends ICommand, IPackageInfo {\n    appName: string;\n    appStoreVersion?: string;\n    deploymentName: string;\n    label: string;\n}\n\nexport interface IPromoteCommand extends ICommand, IPackageInfo {\n    appName: string;\n    appStoreVersion?: string;\n    sourceDeploymentName: string;\n    destDeploymentName: string;\n    noDuplicateReleaseError?: boolean;\n}\n\nexport interface IRegisterCommand extends ICommand {\n    serverUrl?: string;\n    proxy?: string;\n    noProxy?: boolean;\n}\n\nexport interface IReleaseBaseCommand extends ICommand, IPackageInfo {\n    appName: string;\n    appStoreVersion: string;\n    deploymentName: string;\n    noDuplicateReleaseError?: boolean;\n    privateKeyPath?: string;\n}\n\nexport interface IReleaseCommand extends IReleaseBaseCommand {\n    package: string;\n}\n\nexport interface IReleaseCordovaCommand extends IReleaseBaseCommand {\n    build: boolean;\n    platform: string;\n    isReleaseBuildType?: boolean;\n}\n\nexport interface IReleaseReactCommand extends IReleaseBaseCommand {\n    bundleName?: string;\n    development?: boolean;\n    entryFile?: string;\n    gradleFile?: string;\n    platform: string;\n    plistFile?: string;\n    plistFilePrefix?: string;\n    sourcemapOutput?: string;\n    outputDir?: string;\n    config?: string;\n}\n\nexport interface IRollbackCommand extends ICommand {\n    appName: string;\n    deploymentName: string;\n    targetRelease: string;\n}\n\nexport interface ISessionListCommand extends ICommand {\n    format: string;\n}\n\nexport interface ISessionRemoveCommand extends ICommand {\n    machineName: string;\n}\n\nexport type ReleaseHook = (currentCommand: IReleaseCommand, originalCommand: IReleaseCommand, sdk: AccountManager) => Q.Promise<IReleaseCommand|void>;\n\nexport interface ReleaseFile {\n    sourceLocation: string;     // The current location of the file on disk\n    targetLocation: string;     // The desired location of the file within the zip\n}"],"sourceRoot":"../.."}